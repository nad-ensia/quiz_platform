"""pls

Revision ID: 6df948dd0cfb
Revises: 07e1cf17be69
Create Date: 2025-05-12 15:02:45.703503

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6df948dd0cfb'
down_revision = '07e1cf17be69'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('encryption_key',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key_identifier', sa.String(length=128), nullable=False),
    sa.Column('encrypted_key', sa.LargeBinary(), nullable=False),
    sa.Column('iv', sa.LargeBinary(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key_identifier')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('salt', sa.String(length=32), nullable=False),
    sa.Column('rfid_uuid', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('quiz',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title_encrypted', sa.Text(), nullable=False),
    sa.Column('description_encrypted', sa.Text(), nullable=True),
    sa.Column('difficulty_level_encrypted', sa.String(length=20), nullable=False),
    sa.Column('deadline_encrypted', sa.DateTime(), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('encryption_key_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['encryption_key_id'], ['encryption_keys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.LargeBinary(), nullable=False),
    sa.Column('question_type', sa.String(length=50), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_quiz',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('attempt_num', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('option_text', sa.LargeBinary(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_quiz_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.LargeBinary(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['student_quiz_id'], ['student_quiz.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('quizzes')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=256), nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), nullable=False),
    sa.Column('salt', sa.VARCHAR(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('quizzes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title_encrypted', sa.TEXT(), nullable=False),
    sa.Column('description_encrypted', sa.TEXT(), nullable=True),
    sa.Column('creator_id', sa.INTEGER(), nullable=False),
    sa.Column('creation_date', sa.DATETIME(), nullable=True),
    sa.Column('encryption_key_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['encryption_key_id'], ['encryption_keys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('student_answer')
    op.drop_table('option')
    op.drop_table('student_quiz')
    op.drop_table('question')
    op.drop_table('quiz')
    op.drop_table('user')
    op.drop_table('encryption_key')
    # ### end Alembic commands ###
